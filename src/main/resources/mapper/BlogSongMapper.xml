<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sitan.dao.BlogSongDao" >
  <resultMap id="BaseResultMap" type="com.sitan.entity.BlogSong" >
    <id column="song_id" property="songId" jdbcType="INTEGER" />
    <result column="song_name" property="songName" jdbcType="VARCHAR" />
    <result column="song_url" property="songUrl" jdbcType="VARCHAR" />
    <result column="song_singer_id" property="songSingerId" jdbcType="INTEGER" />
    <result column="song_album_id" property="songAlbumId" jdbcType="INTEGER" />
    <result column="song_type_id" property="songTypeId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    song_id, song_name, song_url, song_singer_id, song_album_id, song_type_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sitan.entity.BlogSongExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from blog_song
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from blog_song
    where song_id = #{songId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from blog_song
    where song_id = #{songId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sitan.entity.BlogSongExample" >
    delete from blog_song
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sitan.entity.BlogSong" >
    insert into blog_song (song_id, song_name, song_url, 
      song_singer_id, song_album_id, song_type_id
      )
    values (#{songId,jdbcType=INTEGER}, #{songName,jdbcType=VARCHAR}, #{songUrl,jdbcType=VARCHAR}, 
      #{songSingerId,jdbcType=INTEGER}, #{songAlbumId,jdbcType=INTEGER}, #{songTypeId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sitan.entity.BlogSong" >
    insert into blog_song
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="songId != null" >
        song_id,
      </if>
      <if test="songName != null" >
        song_name,
      </if>
      <if test="songUrl != null" >
        song_url,
      </if>
      <if test="songSingerId != null" >
        song_singer_id,
      </if>
      <if test="songAlbumId != null" >
        song_album_id,
      </if>
      <if test="songTypeId != null" >
        song_type_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="songId != null" >
        #{songId,jdbcType=INTEGER},
      </if>
      <if test="songName != null" >
        #{songName,jdbcType=VARCHAR},
      </if>
      <if test="songUrl != null" >
        #{songUrl,jdbcType=VARCHAR},
      </if>
      <if test="songSingerId != null" >
        #{songSingerId,jdbcType=INTEGER},
      </if>
      <if test="songAlbumId != null" >
        #{songAlbumId,jdbcType=INTEGER},
      </if>
      <if test="songTypeId != null" >
        #{songTypeId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sitan.entity.BlogSongExample" resultType="java.lang.Integer" >
    select count(*) from blog_song
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update blog_song
    <set >
      <if test="record.songId != null" >
        song_id = #{record.songId,jdbcType=INTEGER},
      </if>
      <if test="record.songName != null" >
        song_name = #{record.songName,jdbcType=VARCHAR},
      </if>
      <if test="record.songUrl != null" >
        song_url = #{record.songUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.songSingerId != null" >
        song_singer_id = #{record.songSingerId,jdbcType=INTEGER},
      </if>
      <if test="record.songAlbumId != null" >
        song_album_id = #{record.songAlbumId,jdbcType=INTEGER},
      </if>
      <if test="record.songTypeId != null" >
        song_type_id = #{record.songTypeId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update blog_song
    set song_id = #{record.songId,jdbcType=INTEGER},
      song_name = #{record.songName,jdbcType=VARCHAR},
      song_url = #{record.songUrl,jdbcType=VARCHAR},
      song_singer_id = #{record.songSingerId,jdbcType=INTEGER},
      song_album_id = #{record.songAlbumId,jdbcType=INTEGER},
      song_type_id = #{record.songTypeId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sitan.entity.BlogSong" >
    update blog_song
    <set >
      <if test="songName != null" >
        song_name = #{songName,jdbcType=VARCHAR},
      </if>
      <if test="songUrl != null" >
        song_url = #{songUrl,jdbcType=VARCHAR},
      </if>
      <if test="songSingerId != null" >
        song_singer_id = #{songSingerId,jdbcType=INTEGER},
      </if>
      <if test="songAlbumId != null" >
        song_album_id = #{songAlbumId,jdbcType=INTEGER},
      </if>
      <if test="songTypeId != null" >
        song_type_id = #{songTypeId,jdbcType=INTEGER},
      </if>
    </set>
    where song_id = #{songId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sitan.entity.BlogSong" >
    update blog_song
    set song_name = #{songName,jdbcType=VARCHAR},
      song_url = #{songUrl,jdbcType=VARCHAR},
      song_singer_id = #{songSingerId,jdbcType=INTEGER},
      song_album_id = #{songAlbumId,jdbcType=INTEGER},
      song_type_id = #{songTypeId,jdbcType=INTEGER}
    where song_id = #{songId,jdbcType=INTEGER}
  </update>
</mapper>